name: Deployment Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  avoid_redundancy:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Redundant Builds
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      # ✅ CORREGIDO: Usa la misma versión de Node que tu Lambda (nodejs20.x)
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build Application
        run: yarn build:lambda # Asegúrate que este script coincida con tu package.json

      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  terraform:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      # ✅ CORREGIDO: Usa la misma versión de Node para instalar dependencias de producción
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      # ✅ NUEVO: Este paso crea los dos archivos ZIP necesarios
      - name: Create Lambda Layer and Code Packages
        run: |
          echo "Step 1: Creating function-code.zip from dist artifact..."
          zip -r function-code.zip ./dist/*
          
          echo "Step 2: Installing production dependencies for the layer..."
          yarn install --production
          
          echo "Step 3: Structuring dependencies for Lambda Layer..."
          mkdir -p nodejs
          mv node_modules nodejs/
          
          echo "Step 4: Zipping dependencies for the layer..."
          zip -r dependencies.zip ./nodejs

          echo "Step 5: Move zips to build/ directory for Terraform"
          mkdir -p terraform/build
          mv function-code.zip terraform/build/
          mv dependencies.zip terraform/build/

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2 # Asegúrate que esta es tu región correcta

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: ./terraform

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan
        working-directory: ./terraform